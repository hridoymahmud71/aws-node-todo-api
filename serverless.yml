service: aws-node-todo-api
frameworkVersion: '3'

custom:
  tableName: 'todo-table-${sls:stage}'

provider:
  name: aws
  runtime: nodejs18.x
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ TodoTable, Arn ]
  environment:
    TODO_TABLE: ${self:custom.tableName}

functions:
  create:
    handler: handlers/todoHandler.createTodo
    events:
      - http: 
          path: todo
          method: post
          cors: true
  list:
    handler: handlers/todoHandler.listTodo
    events:
      - http: 
          path: todos
          method: get
          cors: true
  get:
    handler: handlers/todoHandler.getTodo
    events:
      - http: 
          path: todo/{todoId}
          method: get
          cors: true
  update:
    handler: handlers/todoHandler.updateTodo
    events:
      - http: 
          path: todo/{todoId}
          method: put
          cors: true
  delete:
    handler: handlers/todoHandler.deleteTodo
    events:
      - http: 
          path: todo/{todoId}
          method: delete
          cors: true

resources:
  Resources:
    TodoTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: todoId
            AttributeType: S
        KeySchema:
          - AttributeName: todoId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.tableName}
